name: publish-prod
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      #- name: Setup node
      #  uses: actions/setup-node@v1
      #  with:
      #    node-version: '13.x'
      #- name: Install node dependencies
      #  run: npm ci
      - name: Setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
      - name: Install ruby dependencies
        run: bundle install
      - name: Build static site
        run: bundle exec middleman build
      - name: List build contents
        run: ls -la build/
      - name: Check build directory size
        run: du -sh build/
      - name: Deploy static site to S3 bucket
        run: aws s3 sync ./build/ s3://${{ secrets.BUCKET_NAME }} --delete
      - name: Verify deployment
        run: aws s3 ls s3://${{ secrets.BUCKET_NAME }} --recursive | head -20
      - name: Purge Cloudflare cache
        if: ${{ secrets.CLOUDFLARE_API_TOKEN && secrets.CLOUDFLARE_ZONE_ID }}
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache" \
            -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            --data '{"purge_everything":true}'
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}

